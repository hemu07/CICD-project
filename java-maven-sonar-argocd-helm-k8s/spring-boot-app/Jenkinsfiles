pipeline {
  agent {
    docker {
        image: 'abhishekf5/maven-abhishek-docker-agent:v1'
        args: '--user root -v /var/run/docker.sock:/var/run/docker.sock'  //mounting docker socket to access host docker daemon
        }
    }
    stages {
        stage ('Build & Test') {
            steps {
                // cd to location of pom.xml -- build the app -- create JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage ('Static Code Analysis') {
            environment {
                SONAR_URL = 'http://3.85.54.208:9000'
            
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                    }
                }
            }
        }
        stage ('Build & push DockerImage') {
            environment {
                DOCKER_IMAGE = "hemu07/cicd-project:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                    def dockerImage = docker.image ("${DOCKER_IMAGE00}")
                    docker.withRegistry('https://index.docker.io/v1', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage ('update deployment file') {
            environment {
                GIT_REPO_NAME = "CICD-project"
                GIT_USER_NAME = "hemu07"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "hemalijayswal07@gmail.com"
                    git config user.name "hemu07"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}